// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.1.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

class Illust {
  final PlatformInt64 id;
  final String title;
  final String illustType;
  final MainImageUrls imageUrls;
  final String caption;
  final PlatformInt64 restrict;
  final UserSample user;
  final List<Tag> tags;
  final List<String> tools;
  final String createDate;
  final PlatformInt64 pageCount;
  final PlatformInt64 width;
  final PlatformInt64 height;
  final PlatformInt64 sanityLevel;
  final PlatformInt64 xRestrict;
  final Series? series;
  final MetaSinglePage metaSinglePage;
  final List<MetaPage> metaPages;
  final PlatformInt64 totalView;
  final PlatformInt64 totalBookmarks;
  final bool isBookmarked;
  final bool visible;
  final bool isMuted;

  const Illust({
    required this.id,
    required this.title,
    required this.illustType,
    required this.imageUrls,
    required this.caption,
    required this.restrict,
    required this.user,
    required this.tags,
    required this.tools,
    required this.createDate,
    required this.pageCount,
    required this.width,
    required this.height,
    required this.sanityLevel,
    required this.xRestrict,
    this.series,
    required this.metaSinglePage,
    required this.metaPages,
    required this.totalView,
    required this.totalBookmarks,
    required this.isBookmarked,
    required this.visible,
    required this.isMuted,
  });

  @override
  int get hashCode =>
      id.hashCode ^
      title.hashCode ^
      illustType.hashCode ^
      imageUrls.hashCode ^
      caption.hashCode ^
      restrict.hashCode ^
      user.hashCode ^
      tags.hashCode ^
      tools.hashCode ^
      createDate.hashCode ^
      pageCount.hashCode ^
      width.hashCode ^
      height.hashCode ^
      sanityLevel.hashCode ^
      xRestrict.hashCode ^
      series.hashCode ^
      metaSinglePage.hashCode ^
      metaPages.hashCode ^
      totalView.hashCode ^
      totalBookmarks.hashCode ^
      isBookmarked.hashCode ^
      visible.hashCode ^
      isMuted.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is Illust &&
          runtimeType == other.runtimeType &&
          id == other.id &&
          title == other.title &&
          illustType == other.illustType &&
          imageUrls == other.imageUrls &&
          caption == other.caption &&
          restrict == other.restrict &&
          user == other.user &&
          tags == other.tags &&
          tools == other.tools &&
          createDate == other.createDate &&
          pageCount == other.pageCount &&
          width == other.width &&
          height == other.height &&
          sanityLevel == other.sanityLevel &&
          xRestrict == other.xRestrict &&
          series == other.series &&
          metaSinglePage == other.metaSinglePage &&
          metaPages == other.metaPages &&
          totalView == other.totalView &&
          totalBookmarks == other.totalBookmarks &&
          isBookmarked == other.isBookmarked &&
          visible == other.visible &&
          isMuted == other.isMuted;
}

class IllustResponse {
  final List<Illust> illusts;
  final String nextUrl;

  const IllustResponse({
    required this.illusts,
    required this.nextUrl,
  });

  @override
  int get hashCode => illusts.hashCode ^ nextUrl.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is IllustResponse &&
          runtimeType == other.runtimeType &&
          illusts == other.illusts &&
          nextUrl == other.nextUrl;
}

class IllustTrendingTags {
  final List<TrendTag> trendTags;

  const IllustTrendingTags({
    required this.trendTags,
  });

  @override
  int get hashCode => trendTags.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is IllustTrendingTags &&
          runtimeType == other.runtimeType &&
          trendTags == other.trendTags;
}

class LoginUrl {
  final String verify;
  final String url;

  const LoginUrl({
    required this.verify,
    required this.url,
  });

  @override
  int get hashCode => verify.hashCode ^ url.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is LoginUrl &&
          runtimeType == other.runtimeType &&
          verify == other.verify &&
          url == other.url;
}

class MainImageUrls {
  final String squareMedium;
  final String medium;
  final String large;

  const MainImageUrls({
    required this.squareMedium,
    required this.medium,
    required this.large,
  });

  @override
  int get hashCode => squareMedium.hashCode ^ medium.hashCode ^ large.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is MainImageUrls &&
          runtimeType == other.runtimeType &&
          squareMedium == other.squareMedium &&
          medium == other.medium &&
          large == other.large;
}

class MetaPage {
  final MetaPageImageUrls imageUrls;

  const MetaPage({
    required this.imageUrls,
  });

  @override
  int get hashCode => imageUrls.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is MetaPage &&
          runtimeType == other.runtimeType &&
          imageUrls == other.imageUrls;
}

class MetaPageImageUrls {
  final String squareMedium;
  final String medium;
  final String large;
  final String original;

  const MetaPageImageUrls({
    required this.squareMedium,
    required this.medium,
    required this.large,
    required this.original,
  });

  @override
  int get hashCode =>
      squareMedium.hashCode ^
      medium.hashCode ^
      large.hashCode ^
      original.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is MetaPageImageUrls &&
          runtimeType == other.runtimeType &&
          squareMedium == other.squareMedium &&
          medium == other.medium &&
          large == other.large &&
          original == other.original;
}

class MetaSinglePage {
  final String? originalImageUrl;

  const MetaSinglePage({
    this.originalImageUrl,
  });

  @override
  int get hashCode => originalImageUrl.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is MetaSinglePage &&
          runtimeType == other.runtimeType &&
          originalImageUrl == other.originalImageUrl;
}

class Profile {
  final PlatformInt64 addressId;
  final String? backgroundImageUrl;
  final String birth;
  final String birthDay;
  final PlatformInt64 birthYear;
  final String countryCode;
  final String gender;
  final bool isPremium;
  final bool isUsingCustomProfileImage;
  final String job;
  final PlatformInt64 jobId;
  final String? pawooUrl;
  final String region;
  final PlatformInt64 totalFollowUsers;
  final PlatformInt64 totalIllustBookmarksPublic;
  final PlatformInt64 totalIllustSeries;
  final PlatformInt64 totalIllusts;
  final PlatformInt64 totalManga;
  final PlatformInt64 totalMypixivUsers;
  final PlatformInt64 totalNovelSeries;
  final PlatformInt64 totalNovels;
  final String twitterAccount;
  final String? twitterUrl;
  final String? webpage;

  const Profile({
    required this.addressId,
    this.backgroundImageUrl,
    required this.birth,
    required this.birthDay,
    required this.birthYear,
    required this.countryCode,
    required this.gender,
    required this.isPremium,
    required this.isUsingCustomProfileImage,
    required this.job,
    required this.jobId,
    this.pawooUrl,
    required this.region,
    required this.totalFollowUsers,
    required this.totalIllustBookmarksPublic,
    required this.totalIllustSeries,
    required this.totalIllusts,
    required this.totalManga,
    required this.totalMypixivUsers,
    required this.totalNovelSeries,
    required this.totalNovels,
    required this.twitterAccount,
    this.twitterUrl,
    this.webpage,
  });

  @override
  int get hashCode =>
      addressId.hashCode ^
      backgroundImageUrl.hashCode ^
      birth.hashCode ^
      birthDay.hashCode ^
      birthYear.hashCode ^
      countryCode.hashCode ^
      gender.hashCode ^
      isPremium.hashCode ^
      isUsingCustomProfileImage.hashCode ^
      job.hashCode ^
      jobId.hashCode ^
      pawooUrl.hashCode ^
      region.hashCode ^
      totalFollowUsers.hashCode ^
      totalIllustBookmarksPublic.hashCode ^
      totalIllustSeries.hashCode ^
      totalIllusts.hashCode ^
      totalManga.hashCode ^
      totalMypixivUsers.hashCode ^
      totalNovelSeries.hashCode ^
      totalNovels.hashCode ^
      twitterAccount.hashCode ^
      twitterUrl.hashCode ^
      webpage.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is Profile &&
          runtimeType == other.runtimeType &&
          addressId == other.addressId &&
          backgroundImageUrl == other.backgroundImageUrl &&
          birth == other.birth &&
          birthDay == other.birthDay &&
          birthYear == other.birthYear &&
          countryCode == other.countryCode &&
          gender == other.gender &&
          isPremium == other.isPremium &&
          isUsingCustomProfileImage == other.isUsingCustomProfileImage &&
          job == other.job &&
          jobId == other.jobId &&
          pawooUrl == other.pawooUrl &&
          region == other.region &&
          totalFollowUsers == other.totalFollowUsers &&
          totalIllustBookmarksPublic == other.totalIllustBookmarksPublic &&
          totalIllustSeries == other.totalIllustSeries &&
          totalIllusts == other.totalIllusts &&
          totalManga == other.totalManga &&
          totalMypixivUsers == other.totalMypixivUsers &&
          totalNovelSeries == other.totalNovelSeries &&
          totalNovels == other.totalNovels &&
          twitterAccount == other.twitterAccount &&
          twitterUrl == other.twitterUrl &&
          webpage == other.webpage;
}

class ProfileImageUrls {
  final String medium;

  const ProfileImageUrls({
    required this.medium,
  });

  @override
  int get hashCode => medium.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is ProfileImageUrls &&
          runtimeType == other.runtimeType &&
          medium == other.medium;
}

class ProfilePublicity {
  final String birthDay;
  final String birthYear;
  final String gender;
  final String job;
  final bool pawoo;
  final String region;

  const ProfilePublicity({
    required this.birthDay,
    required this.birthYear,
    required this.gender,
    required this.job,
    required this.pawoo,
    required this.region,
  });

  @override
  int get hashCode =>
      birthDay.hashCode ^
      birthYear.hashCode ^
      gender.hashCode ^
      job.hashCode ^
      pawoo.hashCode ^
      region.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is ProfilePublicity &&
          runtimeType == other.runtimeType &&
          birthDay == other.birthDay &&
          birthYear == other.birthYear &&
          gender == other.gender &&
          job == other.job &&
          pawoo == other.pawoo &&
          region == other.region;
}

class Series {
  final PlatformInt64 id;
  final String title;

  const Series({
    required this.id,
    required this.title,
  });

  @override
  int get hashCode => id.hashCode ^ title.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is Series &&
          runtimeType == other.runtimeType &&
          id == other.id &&
          title == other.title;
}

class Tag {
  final String name;
  final String? translatedName;

  const Tag({
    required this.name,
    this.translatedName,
  });

  @override
  int get hashCode => name.hashCode ^ translatedName.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is Tag &&
          runtimeType == other.runtimeType &&
          name == other.name &&
          translatedName == other.translatedName;
}

class TrendTag {
  final String tag;
  final String? translatedName;
  final Illust illust;

  const TrendTag({
    required this.tag,
    this.translatedName,
    required this.illust,
  });

  @override
  int get hashCode => tag.hashCode ^ translatedName.hashCode ^ illust.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is TrendTag &&
          runtimeType == other.runtimeType &&
          tag == other.tag &&
          translatedName == other.translatedName &&
          illust == other.illust;
}

class User {
  final String account;
  final String comment;
  final PlatformInt64 id;
  final bool isAccessBlockingUser;
  final bool isFollowed;
  final String name;
  final ProfileImageUrls profileImageUrls;

  const User({
    required this.account,
    required this.comment,
    required this.id,
    required this.isAccessBlockingUser,
    required this.isFollowed,
    required this.name,
    required this.profileImageUrls,
  });

  @override
  int get hashCode =>
      account.hashCode ^
      comment.hashCode ^
      id.hashCode ^
      isAccessBlockingUser.hashCode ^
      isFollowed.hashCode ^
      name.hashCode ^
      profileImageUrls.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is User &&
          runtimeType == other.runtimeType &&
          account == other.account &&
          comment == other.comment &&
          id == other.id &&
          isAccessBlockingUser == other.isAccessBlockingUser &&
          isFollowed == other.isFollowed &&
          name == other.name &&
          profileImageUrls == other.profileImageUrls;
}

class UserDetail {
  final Profile profile;
  final ProfilePublicity profilePublicity;
  final User user;
  final Workspace workspace;

  const UserDetail({
    required this.profile,
    required this.profilePublicity,
    required this.user,
    required this.workspace,
  });

  @override
  int get hashCode =>
      profile.hashCode ^
      profilePublicity.hashCode ^
      user.hashCode ^
      workspace.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is UserDetail &&
          runtimeType == other.runtimeType &&
          profile == other.profile &&
          profilePublicity == other.profilePublicity &&
          user == other.user &&
          workspace == other.workspace;
}

class UserSample {
  final PlatformInt64 id;
  final String name;
  final String account;
  final ProfileImageUrls profileImageUrls;
  final bool isFollowed;

  const UserSample({
    required this.id,
    required this.name,
    required this.account,
    required this.profileImageUrls,
    required this.isFollowed,
  });

  @override
  int get hashCode =>
      id.hashCode ^
      name.hashCode ^
      account.hashCode ^
      profileImageUrls.hashCode ^
      isFollowed.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is UserSample &&
          runtimeType == other.runtimeType &&
          id == other.id &&
          name == other.name &&
          account == other.account &&
          profileImageUrls == other.profileImageUrls &&
          isFollowed == other.isFollowed;
}

class Workspace {
  final String chair;
  final String comment;
  final String desk;
  final String desktop;
  final String monitor;
  final String mouse;
  final String music;
  final String pc;
  final String printer;
  final String scanner;
  final String tablet;
  final String tool;
  final String? workspaceImageUrl;

  const Workspace({
    required this.chair,
    required this.comment,
    required this.desk,
    required this.desktop,
    required this.monitor,
    required this.mouse,
    required this.music,
    required this.pc,
    required this.printer,
    required this.scanner,
    required this.tablet,
    required this.tool,
    this.workspaceImageUrl,
  });

  @override
  int get hashCode =>
      chair.hashCode ^
      comment.hashCode ^
      desk.hashCode ^
      desktop.hashCode ^
      monitor.hashCode ^
      mouse.hashCode ^
      music.hashCode ^
      pc.hashCode ^
      printer.hashCode ^
      scanner.hashCode ^
      tablet.hashCode ^
      tool.hashCode ^
      workspaceImageUrl.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is Workspace &&
          runtimeType == other.runtimeType &&
          chair == other.chair &&
          comment == other.comment &&
          desk == other.desk &&
          desktop == other.desktop &&
          monitor == other.monitor &&
          mouse == other.mouse &&
          music == other.music &&
          pc == other.pc &&
          printer == other.printer &&
          scanner == other.scanner &&
          tablet == other.tablet &&
          tool == other.tool &&
          workspaceImageUrl == other.workspaceImageUrl;
}
